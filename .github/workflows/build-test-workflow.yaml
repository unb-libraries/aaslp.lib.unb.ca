name: Drupal 9 Build and Test with Cypress Workflow

on:
  push:
    branches:
      - cypress
  workflow_dispatch:

jobs:
  set-deployment-image-tag:
    name: Set deployment image tag
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      -
        name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYYMMDDHHMMSS
      -
        name: Set Tag
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "BUILD_IMAGE_TAG=$CI_SHA_SHORT-$TIMESTAMP" > /tmp/image_tag.env
      -
        name: Display Tag
        run: cat /tmp/image_tag.env
      -
        uses: actions/upload-artifact@v3
        with:
          name: build-image-tag
          path: /tmp/image_tag.env

  build-image:
    name: Build Image
    needs: [set-deployment-image-tag]
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      - uses: actions/checkout@v3
      -
        name: Retrieve Image Tag
        uses: actions/download-artifact@v3
        with:
          name: build-image-tag
          path: /tmp
      -
        name: Set Image Tag
        run: cat /tmp/image_tag.env >> $GITHUB_ENV
      - uses: unb-libraries/install-dockworker-composite-action@v2
      -
        name: Build Themes
        run: vendor/bin/dockworker theme:build-all
      -
        name: Build Docker Image
        env:
          TIMESTAMP: "${{ github.event.repository.updated_at }}"
        run: |
          docker build \
            --build-arg BUILD_DATE=$TIMESTAMP \
            --build-arg VCS_REF=$CI_REF_NAME \
            --build-arg VERSION=$BUILD_IMAGE_TAG \
            --tag "ghcr.io/$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME:$BUILD_IMAGE_TAG" \
            .
      -
        name: Login to GHCR
        run: echo $GH_CONTAINER_REGISTRY_TOKEN | docker login ghcr.io -u $GH_CONTAINER_REGISTRY_USER --password-stdin
        env:
          GH_CONTAINER_REGISTRY_TOKEN: ${{secrets.GH_CONTAINER_REGISTRY_TOKEN}}
          GH_CONTAINER_REGISTRY_USER: ${{secrets.GH_CONTAINER_REGISTRY_USER}}
      -
        name: Push Image to GHCR
        run: docker push "ghcr.io/$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME:$BUILD_IMAGE_TAG"

  update-docker-compose:
    name: Update Docker Compose
    needs: [set-deployment-image-tag]
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      - uses: actions/checkout@v3
      -
        name: Retrieve Image Tag
        uses: actions/download-artifact@v3
        with:
          name: build-image-tag
          path: /tmp
      -
        name: Set Image Tag
        run: cat /tmp/image_tag.env >> $GITHUB_ENV
      -
        name: Remove build section from docker-compose
        run: docker run --rm --env "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME" -v "${PWD}":/workdir mikefarah/yq:3.3.4 yq delete --inplace docker-compose.yml "services[$CI_REPOSITORY_NAME].build"
      -
        name: Add new image section with built image
        run: docker run --rm --env "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME" -v "${PWD}":/workdir mikefarah/yq:3.3.4 yq write --inplace docker-compose.yml "services[$CI_REPOSITORY_NAME].image" "ghcr.io/$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME:$BUILD_IMAGE_TAG"
      -
        name: Upload docker-compose.yml
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: ./docker-compose.yml

  start-install-test-application:
    name: Start-Up & Test Application
    runs-on: ubuntu-latest
    needs: [build-image, update-docker-compose]
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      - uses: actions/checkout@v3
      - uses: unb-libraries/install-dockworker-composite-action@v2
      -
        name: Download docker-compose
        uses: actions/download-artifact@v3
        with:
          name: docker-compose
      -
        name: Login to GHCR
        run: echo $GH_CONTAINER_REGISTRY_TOKEN | docker login ghcr.io -u $GH_CONTAINER_REGISTRY_USER --password-stdin
        env:
          GH_CONTAINER_REGISTRY_TOKEN: ${{secrets.GH_CONTAINER_REGISTRY_TOKEN}}
          GH_CONTAINER_REGISTRY_USER: ${{secrets.GH_CONTAINER_REGISTRY_USER}}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_CLOUD_USER_NAME }}
          password: ${{ secrets.DOCKER_CLOUD_ACCESS_TOKEN }}
      -
        name: Pull Required Docker Images
        run: docker-compose pull --parallel --quiet
      -
        name: Start container and check logs for errors
        run: vendor/bin/dockworker local:start --no-tail-logs --only-start --force-recreate --only-primary
      -
        name: Start cypress and run all tests
        run: vendor/bin/dockworker tests:all
